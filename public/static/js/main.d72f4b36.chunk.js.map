{"version":3,"sources":["ApolloProvider.js","context/auth.js","context/messages.js","components/User.jsx","components/Message.jsx","components/Messages.jsx","components/Home.jsx","pages/Login.jsx","pages/Register.jsx","util/DynamicRoute.js","App.jsx","index.js"],"names":["httpLink","createHttpLink","uri","setContext","_","headers","token","localStorage","getItem","authorization","concat","host","window","location","wsLink","WebSocketLink","options","reconnect","connectionParams","Authorization","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","ApolloProvider","props","AuthStateContext","createContext","AuthDispatchContext","user","decodedToken","jwtDecode","expiresAt","Date","exp","removeItem","console","log","authReducer","state","action","type","setItem","payload","Error","AuthProvider","children","useReducer","dispatch","Provider","value","useAuthState","useContext","useAuthDispatch","MessageStateContext","MessageDispatchContext","messageReducer","usersCopy","userIndex","username","message","messages","reaction","users","findIndex","u","map","selected","reactions","newUser","latestMessage","userCopy","messageIndex","m","uuid","messagesCopy","reactionsCopy","reactionIndex","r","MessageProvider","useMessageState","useMessageDispatch","GET_USERS","gql","User","usersMarkup","selectedUser","find","loading","useQuery","onCompleted","data","getUsers","onError","err","length","role","className","classNames","onClick","Image","src","imageUrl","content","Col","xs","md","REACT_TO_MESSAGE","Message","sent","from","received","useState","showPopover","setShowPopover","reactionIcons","Set","useMutation","reactToMessage","reactButton","OverlayTrigger","trigger","placement","show","onToggle","transition","rootClose","overlay","Popover","Content","Button","variant","variables","react","Tooltip","moment","createdAt","format","SEND_MESSAGE","GET_MESSAGES","Messages","setContent","useLazyQuery","getMessages","messagesLoading","messagesData","sendMessage","useEffect","selectedChatMarkup","submitMessage","e","preventDefault","trim","to","index","Form","onSubmit","Group","Control","placeholder","onChange","target","NEW_MESSAGE","NEW_REACTION","Home","history","authDispatch","messageDispatch","useSubscription","messageData","messageError","error","reactionData","reactionError","newMessage","otherUser","newReaction","Row","href","LOGIN_USER","Login","password","setVariables","errors","setErrors","graphQLErrors","extensions","login","loginUser","sm","lg","event","Label","disabled","REGISTER_USER","Register","email","confirmPassword","update","__","push","registerUser","DynamicRoute","authenticated","guest","component","App","Container","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d72f4b36.chunk.js","sourcesContent":["import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider as Provider, createHttpLink, split } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nlet httpLink = createHttpLink({\n  uri: '/graphql/',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nhttpLink = authLink.concat(httpLink);\nconst host = window.location.host;\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://${host}/graphql/`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  }\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache()\n});\n\nexport default function ApolloProvider(props) {\n  return <Provider client={client} {...props} />\n}","import React, { createContext, useReducer, useContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst AuthStateContext = createContext();\nconst AuthDispatchContext = createContext();\n\n\nlet user = null;\nconst token = localStorage.getItem('token');\nif(token) {\n  const decodedToken = jwtDecode(token);\n  const expiresAt = new Date(decodedToken.exp * 1000)\n\n  if(new Date() > expiresAt) {\n    localStorage.removeItem('token')\n  } else {\n    user = decodedToken\n  }\n} else console.log('No token found')\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      localStorage.setItem('token', action.payload.token)\n      return {\n        ...state,\n        user: action.payload,\n      }\n    case 'LOGOUT':\n      localStorage.removeItem('token')\n      return {\n        ...state,\n        user: null,\n      }\n    default:\n      throw new Error(`Unknown action type: ${action.type}`)\n  }\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, { user })\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  )\n}\n\nexport const useAuthState = () => useContext(AuthStateContext)\nexport const useAuthDispatch = () => useContext(AuthDispatchContext)","import React, { createContext, useReducer, useContext } from 'react';\n\nconst MessageStateContext = createContext();\nconst MessageDispatchContext = createContext();\n\n\nconst messageReducer = (state, action) => {\n  let usersCopy, userIndex\n  const { username, message, messages, reaction } = action.payload\n  switch (action.type) {\n      case 'SET_USERS' :\n          return {\n              ...state,\n              users: action.payload\n          }\n      case 'SET_USER_MESSAGES':\n        usersCopy = [...state.users]\n        userIndex = usersCopy.findIndex(u => u.username === username)\n\n        usersCopy[userIndex] = { ...usersCopy[userIndex], messages}\n\n        return {\n          ...state,\n          users: usersCopy\n        }\n      case 'SET_SELECTED_USER': \n          usersCopy = state.users.map(user => ({\n            ...user,\n            selected: user.username === action.payload\n          }))\n\n          return {\n            ...state,\n            users: usersCopy\n          }\n\n      case 'ADD_MESSAGE':\n        usersCopy = [...state.users];\n\n        userIndex = usersCopy.findIndex(u => u.username === username);\n\n        message.reactions = [];\n\n        let newUser = {\n          ...usersCopy[userIndex],\n          messages: usersCopy[userIndex].messages \n            ? [message, ...usersCopy[userIndex].messages] \n            : null,\n          latestMessage: message,\n        };\n\n        usersCopy[userIndex] = newUser;\n\n        return {\n          ...state,\n          users: usersCopy,\n        };\n\n        case 'ADD_REACTION':\n          usersCopy = [...state.users];\n\n          userIndex = usersCopy.findIndex(u => u.username === username);\n\n          // Make a shallow copy of user\n          let userCopy = { ...usersCopy[userIndex]};\n          // Find the index of the message that this reaction pertains to\n          const messageIndex = userCopy.messages?.findIndex(m => m.uuid === reaction.message.uuid);\n          \n          if(messageIndex > -1) {\n            // Make a shallow copy of user messages\n            let messagesCopy = [...userCopy.messages];\n\n            // Make a shallow copy of user messages reactions\n            let reactionsCopy = [...messagesCopy[messageIndex].reactions];\n\n            const reactionIndex = reactionsCopy.findIndex(r => r.uuid === reaction.uuid);\n\n            if(reactionIndex > -1) {\n              // Reaction exists, update\n              reactionsCopy[reactionIndex] = reaction;\n            } else {\n              // new Reaction, add it\n              reactionsCopy = [...reactionsCopy, reaction];\n            }\n            messagesCopy[messageIndex] = {\n              ...messagesCopy[messageIndex],\n              reactions: reactionsCopy\n            }\n            userCopy = {...userCopy, messages: messagesCopy }\n            usersCopy[userIndex] = userCopy\n          }\n\n          return {\n            ...state,\n            users: usersCopy\n          };\n\n    default:\n      throw new Error(`Unknown action type: ${action.type}`)\n  }\n}\n\nexport const MessageProvider = ({ children }) => {\n  const [state, dispatch] = useReducer( messageReducer, { users: null })\n\n  return (\n    <MessageDispatchContext.Provider value={dispatch}>\n      <MessageStateContext.Provider value={state}>\n        {children}\n      </MessageStateContext.Provider>\n    </MessageDispatchContext.Provider>\n  )\n}\n\nexport const useMessageState = () => useContext(MessageStateContext)\nexport const useMessageDispatch = () => useContext(MessageDispatchContext)","import React from 'react';\nimport { gql, useQuery, } from '@apollo/client';\nimport { Col, Image } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { useMessageDispatch, useMessageState } from '../context/messages';\n\nconst GET_USERS = gql`\n  query getUsers {\n    getUsers {\n      username\n      createdAt\n      imageUrl\n      latestMessage {\n        uuid\n        from\n        to\n        content\n        createdAt\n      }\n    }\n  }\n`\n\nexport default function User() {\n    const dispatch = useMessageDispatch();\n    const { users } = useMessageState();\n    const selectedUser = users?.find(u => u.selected === true)?.username;\n\n    const { loading } = useQuery(GET_USERS, {\n        onCompleted: data => dispatch({ type : 'SET_USERS', payload: data.getUsers }),\n        onError: err => console.log(err)\n    })\n\n    let usersMarkup;\n    if(!users || loading) {\n      usersMarkup = <p>Loading...</p>\n    } else if(users.length === 0) {\n      usersMarkup = <p>No users have joined yet</p>\n    } else if(users.length > 0) {\n      usersMarkup = users.map((user) => {\n          const selected = selectedUser === user.username\n          return (\n           <div\n               role=\"button\" \n               className={classNames(\"user-div d-flex justify-content-center justify-content-md-start p-3\", { 'bg-white' : selected } )}\n               key={user.username} \n               onClick={() => dispatch({ type: 'SET_SELECTED_USER', payload: user.username })}\n           >\n             <Image \n               src={user.imageUrl || 'https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y'} \n               className=\"user-image\"\n             />\n             <div className=\"d-none d-md-block ml-2\">\n               <p className=\"text-success\">{user.username}</p>\n               <p className=\"font-weight-light\">\n                 {user.latestMessage ?  user.latestMessage.content : \"You are now connected!\"}\n               </p>\n             </div>\n           </div>\n           )\n        })\n    }\n\n    return (\n    <Col xs={2} md={4} className=\"p-0 bg-secondary\">\n        {usersMarkup}\n    </Col>\n    )\n}\n","import React, { useState } from 'react';\nimport { Button, OverlayTrigger, Tooltip, Popover } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { useAuthState } from '../context/auth';\nimport { gql, useMutation } from '@apollo/client';\n\nconst reactions = ['❤️', '😆', '😯', '😢', '😡', '👍', '👎']\n\nconst REACT_TO_MESSAGE = gql`\n  mutation reactToMessage($uuid: String!, $content: String!) {\n    reactToMessage(uuid: $uuid, content: $content) {\n      uuid\n    }\n  }\n`\n\nexport default function Message({ message }) {\n    const { user } = useAuthState();\n    const sent = message.from === user.username;\n    const received = !sent;\n    const [showPopover, setShowPopover] = useState(false);\n    const reactionIcons = [... new Set(message.reactions.map(r => r.content))]\n    \n    const [reactToMessage] = useMutation(REACT_TO_MESSAGE, {\n        onError: (err) => console.log(err),\n        onCompleted: (data) => setShowPopover(false),\n    })\n\n    const react = (reaction) => {\n        // console.log(`reacting ${reaction} to msg ${message.uuid}`)\n        reactToMessage({ variables: { uuid: message.uuid, content: reaction } })\n    }\n\n    const reactButton = (\n        <OverlayTrigger\n            trigger=\"click\"\n            placement=\"top\"\n            show={showPopover}\n            onToggle={setShowPopover}\n            transition={false}\n            rootClose\n            overlay={\n                <Popover className=\"rounded-pill\">\n                    <Popover.Content className=\"d-flex px-0 py-1 align-items-center react-btn-popover\">\n                        {reactions.map(reaction => (\n                            <Button\n                            className=\"react-icon-btn\"\n                            variant=\"link\" \n                            key={reaction} \n                            onClick={() => react(reaction)}\n                            >\n                                {reaction}\n                            </Button>\n                        ))}\n                    </Popover.Content>\n                </Popover>\n            }\n        >\n            <Button variant=\"link\" className=\"px-2\">\n                <i className=\"far fa-smile\"></i>\n            </Button>\n        </OverlayTrigger>\n    );\n\n    return (\n        <div className={classNames(\"d-flex my-3\", {\n            'ml-auto': sent,\n            'mr-auto': received,\n            })}\n         >\n            {sent && reactButton}\n            <OverlayTrigger\n                placement={sent ? 'right' : 'left'}\n                overlay={\n                    <Tooltip >\n                        {moment(message.createdAt).format('MMMM DD, YYYY @ h:mm a')}\n                    </Tooltip>\n                }\n                transition={false}\n            >\n                <div className={classNames('py-2 px-3 rounded-pill position-relative', {\n                    'bg-primary': sent,\n                    'bg-secondary': received,\n                    })}\n                >\n                    {message.reactions.length > 0 && (\n                        <div className=\"reactions-div p-1 rounded-pill\">\n                            { reactionIcons } { message.reactions.length }\n                        </div>\n                    )}\n                    <p className={classNames({ 'text-white' : sent })} key ={message.uuid}>\n                        {message.content}\n                    </p>\n                </div>\n            </OverlayTrigger>\n            {received && reactButton}\n        </div>\n\n  \n    )\n}\n","import React, { Fragment ,useEffect, useState } from 'react'\nimport { gql, useLazyQuery, useMutation } from '@apollo/client';\nimport { Col, Form } from 'react-bootstrap';\n\nimport { useMessageDispatch, useMessageState } from '../context/messages';\nimport Message from './Message';\n\nconst SEND_MESSAGE = gql`\n  mutation sendMessage($to: String!, $content: String!){\n    sendMessage(to: $to, content: $content){\n      uuid from to content createdAt\n    }\n  }\n`\n\nconst GET_MESSAGES = gql`\n  query getMessages($from: String!) {\n    getMessages(from: $from) {\n      uuid\n      from\n      to\n      content\n      createdAt\n      reactions{\n        uuid\n        content\n      }\n    }\n  }\n`\n\nexport default function Messages() {\n    const { users } = useMessageState();\n    const dispatch = useMessageDispatch();\n    const [content, setContent] = useState('')\n\n    const selectedUser = users?.find(u => u.selected === true);\n    const messages = selectedUser?.messages;\n\n    const [ getMessages, { loading: messagesLoading, data: messagesData } ] = useLazyQuery(GET_MESSAGES)\n    const [ sendMessage ] = useMutation(SEND_MESSAGE, {\n      onError: err => console.log(err)\n    })\n\n  useEffect(() => {\n    if(selectedUser && !selectedUser.messages) {\n      getMessages({ variables: { from: selectedUser.username }})\n    }\n  }, [selectedUser])\n\n  useEffect(() => {\n      if(messagesData) {\n          dispatch({ type: 'SET_USER_MESSAGES', payload: {\n              username: selectedUser.username,\n              messages: messagesData.getMessages\n          } })\n      }\n  }, [messagesData])\n\n  const submitMessage = e => {\n    e.preventDefault();\n\n    if(content.trim() === '' || !selectedUser) return\n\n    // mutation for sending the message\n    sendMessage({ variables: { to: selectedUser.username, content } })\n    setContent(\"\")\n  }\n\n  let selectedChatMarkup\n  if(!messages && !messagesLoading) {\n    selectedChatMarkup = <p className=\"info-text\">Select a Friend</p>\n  } else if(messagesLoading) {\n      selectedChatMarkup = <p className=\"info-text\">Loading...</p>\n  } else if(messages.length > 0) {\n      selectedChatMarkup = messages.map(( message, index ) => (\n          <Fragment key={messages.uuid}>\n            <Message message={message} />\n            {index === messages.length -1 && (\n                <div className=\"invisible\">\n                    <hr className=\"m-0\" />\n                </div>\n            )}\n          </Fragment>\n      ))\n  } else if(messages.length === 0) {\n      selectedChatMarkup = <p className=\"info-text\">You are now connected! send your first message!</p>\n  }\n\n    return (\n    <Col xs={10} md={8} className=\"p-0\">\n      <div className=\"messages-box d-flex flex-column-reverse p-3\">\n        {selectedChatMarkup}\n      </div>\n      <div className=\"px-3 py-2\">\n        <Form onSubmit={submitMessage}>\n          <Form.Group className=\"d-flex align-items-center m-0\">\n            <Form.Control\n              type=\"text\"\n              className=\"message-input rounded-pill p-4 bg-secondary border-0\"\n              placeholder=\"Type a message ..\"\n              value={content}\n              onChange={e => setContent(e.target.value)}\n             />\n             <i \n              className=\"fas fa-paper-plane fa-2x text-primary ml-2\" \n              onClick={submitMessage}\n              role=\"button\"\n              ></i>\n          </Form.Group>\n        </Form>\n      </div>\n    </Col>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { gql, useSubscription} from '@apollo/client';\n\nimport { useAuthDispatch, useAuthState } from '../context/auth';\nimport { useMessageDispatch } from '../context/messages';\n\nimport User from './User';\nimport Messages from './Messages';\n\nconst NEW_MESSAGE = gql`\n  subscription newMessage{\n    newMessage{\n      uuid \n      from \n      to \n      content \n      createdAt\n    }\n  }\n`;\n\nconst NEW_REACTION = gql`\n  subscription newReaction{\n    newReaction{\n      uuid \n      content\n      message{\n        uuid from to \n      }\n    }\n  }\n`;\n\n\n\nexport default function Home({ history }) {\n  const authDispatch = useAuthDispatch();\n  const messageDispatch = useMessageDispatch();\n\n  const { user } = useAuthState();\n\n  const { data: messageData, error: messageError } = useSubscription(NEW_MESSAGE);\n  const { data: reactionData, error: reactionError } = useSubscription(NEW_REACTION);\n\n// subscribe message\n  useEffect(() => {\n    if(messageError) console.log(messageError);\n    if(messageData) {\n      const message = messageData.newMessage\n      const otherUser = user.username === message.to ? message.from : message.to\n\n      messageDispatch({ \n        type: 'ADD_MESSAGE', \n        payload: {\n          username: otherUser,\n          message,\n      },\n    })\n  }\n}, [messageData, messageError])\n\n// subscribe reactions\n  useEffect(() => {\n    if(reactionError) console.log(reactionError);\n    if(reactionData) {\n      const reaction = reactionData.newReaction\n      const otherUser = user.username === reaction.message.to ? reaction.message.from : reaction.message.to\n\n      messageDispatch({ \n        type: 'ADD_REACTION', \n        payload: {\n          username: otherUser,\n          reaction,\n      },\n    })\n  }\n}, [reactionData, reactionError])\n\n  const logout = () => {\n    authDispatch({ type: 'LOGOUT' })\n    window.location.href = '/login'\n  }\n\n\n  return (\n    <>\n    <Row className=\"bg-white justify-content-around mb-2\">\n      <Link to=\"/login\">\n        <Button variant=\"link\">Login</Button>\n      </Link>\n      <Link to=\"/register\">\n        <Button variant=\"link\">register</Button>\n      </Link>\n        <Button \n          variant=\"link\"\n          onClick={logout}\n        >\n          LogOut\n        </Button>\n    </Row>\n    <Row className=\"bg-white\">\n        <User />\n        <Messages />\n    </Row>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nimport { useAuthDispatch } from '../context/auth'\n\nconst LOGIN_USER = gql`\n  query Login(\n    $username: String!\n    $password: String!\n  ) {\n    login(\n      username: $username\n      password: $password\n    ) {\n      username\n      email\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default function Login(props) {\n\n  const [variables, setVariables] = useState({\n    username: '',\n    password: '',\n  });\n\n  const [errors, setErrors] = useState({});\n  const dispatch = useAuthDispatch();\n\n  const [loginUser, { loading, data, error }] = useLazyQuery(LOGIN_USER, {\n    onError(err) {\n      console.log(err.graphQLErrors[0].extensions.errors);\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    },\n    onCompleted(data) {\n      dispatch({ type: 'LOGIN', payload: data.login })\n      window.location.href = '/';\n    }\n  });\n\n  const submitLoginForm = (event) => {\n    event.preventDefault();\n\n    loginUser({ variables });\n  }\n\n  return (\n    <Row className=\"bg-white py-5 justify-content-center\">\n    <Col sm={8} md={6} lg={4}>\n      <h1 className=\"text-center\">Login</h1>\n      <Form onSubmit={submitLoginForm}>\n        <Form.Group>\n          <Form.Label className={errors.username && 'text-danger'}>\n            {errors.username ?? 'Username'}\n          </Form.Label>\n          <Form.Control\n            className={errors.username && 'is-invalid'} \n            type=\"text\" \n            value={variables.username}\n            onChange={(event) => \n              setVariables({ ...variables, username: event.target.value })}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className={errors.password && 'text-danger'}>\n            {errors.password ?? 'Password'}\n          </Form.Label>\n          <Form.Control\n            className={errors.password && 'is-invalid'}\n            type=\"password\"\n            value={variables.password}\n            onChange={(event) => \n              setVariables({ ...variables, password: event.target.value })} \n          />\n        </Form.Group>\n        <div className=\"text-center\">\n          <Button variant=\"success\" type=\"submit\" disabled={loading}>\n            { loading ? 'loading..' : 'Login' }\n          </Button>\n          <br />\n          <small>\n            Don't have an account? <Link to=\"/register\">Register</Link> \n          </small>\n        </div>\n      </Form>\n    </Col>\n  </Row>\n  );\n}\n","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { gql, useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      username: $username\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      username\n      email\n      createdAt\n    }\n  }\n`;\n\nexport default function Register(props) {\n\n  const [variables, setVariables] = useState({\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const [registerUser, { loading, data, error }] = useMutation(REGISTER_USER, {\n    update(_, __) {\n      props.history.push('/login')\n    },\n    onError(err) {\n      console.log(err.graphQLErrors[0].extensions.errors);\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    }\n  });\n\n  const submitRegisterForm = (event) => {\n    event.preventDefault();\n\n    registerUser({ variables })\n  }\n\n  return (\n    <Row className=\"bg-white py-5 justify-content-center\">\n    <Col sm={8} md={6} lg={4}>\n      <h1 className=\"text-center\">Register</h1>\n      <Form onSubmit={submitRegisterForm}>\n        <Form.Group>\n          <Form.Label className={errors.email && 'text-danger'}>\n            {errors.email ?? 'Email address'}\n          </Form.Label>\n          <Form.Control \n            className={errors.email && 'is-invalid'}\n            type=\"email\" \n            value={variables.email}\n            onChange={(event) => \n              setVariables({ ...variables, email: event.target.value })}\n            />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className={errors.username && 'text-danger'}>\n            {errors.username ?? 'Username'}\n          </Form.Label>\n          <Form.Control\n            className={errors.username && 'is-invalid'} \n            type=\"text\" \n            value={variables.username}\n            onChange={(event) => \n              setVariables({ ...variables, username: event.target.value })}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className={errors.password && 'text-danger'}>\n            {errors.password ?? 'Password'}\n          </Form.Label>\n          <Form.Control\n            className={errors.password && 'is-invalid'}\n            type=\"password\"\n            value={variables.password}\n            onChange={(event) => \n              setVariables({ ...variables, password: event.target.value })} \n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className={errors.confirmPassword && 'text-danger'}>\n            {errors.confirmPassword ?? 'Confirm Password'}\n          </Form.Label>\n          <Form.Control\n            className={errors.confirmPassword && 'is-invalid'}\n            type=\"password\" \n            value={variables.confirmPassword}\n            onChange={(event) => \n              setVariables({ ...variables, confirmPassword: event.target.value })}\n          />\n        </Form.Group>\n        <div className=\"text-center\">\n          <Button variant=\"success\" type=\"submit\" disabled={loading}>\n            { loading ? 'loading..' : 'Register' }\n          </Button>\n          <br />\n          <small>\n            Already have an account? <Link to=\"/login\">Login</Link> \n          </small>\n        </div>\n      </Form>\n    </Col>\n  </Row>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { useAuthState } from '../context/auth';\n\nexport default function DynamicRoute(props) {\n  const { user } = useAuthState();\n\n  if(props.authenticated && !user) {\n    return <Redirect to=\"/login\" />\n  } else if(props.guest && user) {\n    return <Redirect to=\"/\" />\n  } else {\n    return <Route component={props.component} {...props} />\n  }\n}","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport ApolloProvider from './ApolloProvider';\n\nimport './App.scss';\nimport Home from './components/Home'\nimport Login from './pages/Login';\nimport Register from './pages/Register';\n\nimport { AuthProvider } from './context/auth';\nimport { MessageProvider } from './context/messages';\nimport DynamicRoute from './util/DynamicRoute';\n\nfunction App() {\n  return (\n    <ApolloProvider>\n      <AuthProvider>\n        <MessageProvider>\n          <BrowserRouter>\n            <Container className=\"pt-5\">\n              <Switch>\n                <DynamicRoute exact path=\"/\" component={Home} authenticated />\n                <DynamicRoute path=\"/register\" component={Register} guest />\n                <DynamicRoute path=\"/login\" component={Login} guest />\n              </Switch>\n            </Container>\n        </BrowserRouter>\n        </MessageProvider>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}